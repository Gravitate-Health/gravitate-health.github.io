"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[293],{6719:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>s});const n=JSON.parse('{"id":"tutorial-connector/Develop a Custom Pull Connector","title":"Develop a Custom Pull Connector","description":"Create a project","source":"@site/docs/tutorial-connector/3 - Develop a Custom Pull Connector.md","sourceDirName":"tutorial-connector","slug":"/tutorial-connector/Develop a Custom Pull Connector","permalink":"/docs/tutorial-connector/Develop a Custom Pull Connector","draft":false,"unlisted":false,"editUrl":"https://github.com/gravitate-health/gravitate-health.github.io/tree/main/docs/tutorial-connector/3 - Develop a Custom Pull Connector.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Creating a Connector","permalink":"/docs/tutorial-connector/Creating a Connector"},"next":{"title":"Deploying your Connector","permalink":"/docs/tutorial-connector/Deploying your Connector"}}');var o=r(4848),c=r(8453);const a={},i="Develop a Custom Pull Connector",l={},s=[{value:"Create a project",id:"create-a-project",level:2},{value:"Generate the stub server",id:"generate-the-stub-server",level:2},{value:"Implement Services",id:"implement-services",level:2},{value:"Generate Docker image",id:"generate-docker-image",level:2},{value:"Helm chart",id:"helm-chart",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"develop-a-custom-pull-connector",children:"Develop a Custom Pull Connector"})}),"\n",(0,o.jsx)(t.h2,{id:"create-a-project",children:"Create a project"}),"\n",(0,o.jsx)(t.p,{children:"Select your languaje, and project management tool(s), create a project with them."}),"\n",(0,o.jsx)(t.p,{children:"For purposes of this tutorial, we will proceed with XXX."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{})}),"\n",(0,o.jsx)(t.h2,{id:"generate-the-stub-server",children:"Generate the stub server"}),"\n",(0,o.jsx)(t.p,{children:"Beacuse the connector must follow the Open API specification to interface with FOSPS, one of the easiest ways to start is to use tools to generate the appropriate REST inmplementation with empty code (a.k.a Stub). From there then implement each service."}),"\n",(0,o.jsxs)(t.p,{children:["For the purposes of this tutorial we will use ",(0,o.jsx)(t.a,{href:"https://openapi-generator.tech/",children:"OpenAPI Generator"})," tool."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{})}),"\n",(0,o.jsx)(t.h2,{id:"implement-services",children:"Implement Services"}),"\n",(0,o.jsx)(t.h2,{id:"generate-docker-image",children:"Generate Docker image"}),"\n",(0,o.jsxs)(t.p,{children:["If you are familiar with ",(0,o.jsx)(t.a,{href:"https://www.docker.com/",children:"Docker"}),", this step should be straigh forward.\nFirst Create a ",(0,o.jsx)(t.code,{children:"Dockerfile"})," file in your project, it should look something like:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'FROM node:20-alpine\nWORKDIR /app\nCOPY . .\nRUN yarn install --production\nCMD ["node", "./src/index.js"]\n'})}),"\n",(0,o.jsx)(t.p,{children:"Then generate the image with:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"docker build -t my-connector .\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Change the tag (the parameter after ",(0,o.jsx)(t.code,{children:"-t"}),"), remember the tag for later, as it is needed by FOSPS to deploy the connector."]}),"\n",(0,o.jsx)(t.h2,{id:"helm-chart",children:"Helm chart"})]})}function d(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>i});var n=r(6540);const o={},c=n.createContext(o);function a(e){const t=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(c.Provider,{value:t},e.children)}}}]);